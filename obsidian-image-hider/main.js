/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var o=Object.getOwnPropertyNames;var r=Object.prototype.hasOwnProperty;var g=(e,t)=>{for(var i in t)l(e,i,{get:t[i],enumerable:!0})},m=(e,t,i,h)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of o(t))!r.call(e,s)&&s!==i&&l(e,s,{get:()=>t[s],enumerable:!(h=d(t,s))||h.enumerable});return e};var b=e=>m(l({},"__esModule",{value:!0}),e);var p={};g(p,{default:()=>n});module.exports=b(p);var a=require("obsidian"),f={isHidden:!0},n=class extends a.Plugin{async onload(){await this.loadSettings(),this.initStyles(),this.ribbonIconEl=this.addRibbonIcon(this.settings.isHidden?"eye-off":"eye",this.settings.isHidden?"Show images":"Hide images",()=>{this.toggleVisibility()}),this.ribbonIconEl.addClass("image-visibility-toggle-button")}async onunload(){var i;(i=this.styleEl)==null||i.remove()}async loadSettings(){this.settings=Object.assign({},f,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}initStyles(){this.styleEl=document.createElement("style"),this.styleEl.textContent=`
			.tree-item.nav-file:has(.tree-item-self[data-path$=".png"]),
			.tree-item.nav-file:has(.tree-item-self[data-path$=".jpg"]),
			.tree-item.nav-file:has(.tree-item-self[data-path$=".jpeg"]),
			.tree-item.nav-file:has(.tree-item-self[data-path$=".webp"]),
			.tree-item.nav-file:has(.tree-item-self[data-path$=".gif"]),
			.tree-item.nav-file:has(.tree-item-self[data-path$=".bmp"]),
			.tree-item.nav-file:has(.tree-item-self[data-path$=".svg"]) {
				display: none !important;
			}
		`,this.settings.isHidden&&document.head.appendChild(this.styleEl)}async toggleVisibility(){this.settings.isHidden?(this.styleEl.remove(),this.ribbonIconEl.setAttribute("aria-label","Hide images"),(0,a.setIcon)(this.ribbonIconEl,"eye")):(document.head.appendChild(this.styleEl),this.ribbonIconEl.setAttribute("aria-label","Show images"),(0,a.setIcon)(this.ribbonIconEl,"eye-off")),this.settings.isHidden=!this.settings.isHidden,await this.saveSettings()}};
